ARG HOPR_TOOLCHAIN_IMAGE=${HOPR_TOOLCHAIN_IMAGE:-hopr-toolchain:latest}

# Creates a Docker container that encapsulates a local testnet with deployed smart contracts

FROM ${HOPR_TOOLCHAIN_IMAGE} as build

WORKDIR /app/hoprnet

LABEL description="Launches an anvilnode running a local network with the HOPR contracts deployed and available." 

COPY packages/ethereum/contracts .

RUN cd contracts && make deploy-all

# Alpine 3.16 x86_64 https://hub.docker.com/layers/library/alpine/3.16.3/images/sha256-3d426b0bfc361d6e8303f51459f17782b219dece42a1c7fe463b6014b189c86d
FROM alpine:3.16@sha256:3d426b0bfc361d6e8303f51459f17782b219dece42a1c7fe463b6014b189c86d as runtime

WORKDIR /app/anvil

EXPOSE 8545

RUN mkdir -p scripts/toolchain

COPY Makefile .yarnrc.yml package.json yarn.lock tsconfig.json ./
COPY scripts/toolchain/install-toolchain.sh ./scripts/toolchain

COPY --from=build /app/hoprnet/.foundry .foundry/

RUN make install-foundry

ENTRYPOINT ["/sbin/tini", "--", "yarn", "run:network", "--network", "hardhat", "--show-stack-traces"]
