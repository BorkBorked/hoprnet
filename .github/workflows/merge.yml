name: Merge

on:
  pull_request:
    branches:
      - master
      - release/*
    types:
      # - closed
      - synchronize

concurrency:
  group: merge
  cancel-in-progress: false

env:
  HOPR_GITHUB_REF: ${{ github.ref }}
  MATRIX_ROOM: ${{ secrets.MATRIX_ROOM }}
  MATRIX_CLUSTER_INFO_ROOM: ${{ secrets.MATRIX_CLUSTER_INFO_ROOM }}
  MATRIX_SERVER: ${{ secrets.MATRIX_SERVER }}
  MATRIX_ACCESS_TOKEN: ${{ secrets.MATRIX_ACCESS_TOKEN }}

jobs:
  cleanup:
    name: Cleanup gh actions
    runs-on: ubuntu-2-core
    steps:
      - name: Checkout hoprnet repository
        uses: actions/checkout@v3
      - name: Cleanup
#           (echo; echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"') >> /home/runner/.profile
        run: |
          sudo /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          sudo brew install gh
          gh extension install actions/gh-actions-cache

          REPO=${{ github.repository }}
          BRANCH="refs/pull/${{ github.event.pull_request.number }}/merge"

          echo "Fetching list of cache key"
          cacheKeysForPR=$(gh actions-cache list -R $REPO -B $BRANCH | cut -f 1 )

          ## Setting this to not fail the workflow while deleting cache keys.
          set +e
          echo "Deleting caches..."
          for cacheKey in $cacheKeysForPR
          do
            gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
          done
          echo "Done"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tag:
    name: Tag images
    runs-on: ubuntu-2-core
    steps:
      - name: Checkout hoprnet repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check PR changes
        id: check_pr_changeset
        run: |          
          ./scripts/check-pr.sh --base-branch ${{ github.event.pull_request.base.sha }} --head-branch ${{ github.event.pull_request.head.sha }}
          cat check_pr.log >> $GITHUB_ENV
          declare base_branch=${{ github.event.pull_request.base.ref }}
          if [ "${base_branch}" == "master" ]; then
            echo "DOCKER_TAG=latest"  >> $GITHUB_ENV
          else
            echo "DOCKER_TAG=${base_branch/release\//}" >> $GITHUB_ENV
          fi
          ./scripts/bump-version.sh ${{ github.event.pull_request.base.ref }} ${{ github.event.pull_request.number }}
          echo "DOCKER_CURRENT_TAG=$(./scripts/get-package-version.sh | sed 's/+/-/' )" >> $GITHUB_ENV
      - id: auth
        name: Set up Google Cloud Credentials
        uses: google-github-actions/auth@v1
        with:
          token_format: "access_token"
          credentials_json: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}

      - name: Login Google Container Registry
        uses: docker/login-action@v2
        with:
          registry: europe-west3-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Docker Tag Toolchain
        if: env.build_toolchain
        run: |
          docker pull europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hopr-toolchain:${{ DOCKER_CURRENT_TAG }}
          docker tag europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hopr-toolchain:${{ DOCKER_CURRENT_TAG }} europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hopr-toolchain:${{ env.DOCKER_TAG }}
          docker push europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hopr-toolchain:${{ env.DOCKER_TAG }}
      - name: Docker Tag Hopli
        if: env.build_hopli
        run: |
          docker pull europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hopli:${{ DOCKER_CURRENT_TAG }}
          docker tag europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hopli:${{ DOCKER_CURRENT_TAG }} europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hopli:${{ env.DOCKER_TAG }}
          docker push europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hopli:${{ env.DOCKER_TAG }}
      - name: Docker Tag Hoprd
        if: env.build_hoprd
        run: |
          docker pull europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hoprd:${{ DOCKER_CURRENT_TAG }}
          docker tag europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hoprd:${{ DOCKER_CURRENT_TAG }} europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hoprd:${{ env.DOCKER_TAG }}
          docker push europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hoprd:${{ env.DOCKER_TAG }}
      - name: Docker Tag Anvil
        if: env.build_anvil
        run: |
          docker pull europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hopr-anvil:${{ DOCKER_CURRENT_TAG }}
          docker tag europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hopr-anvil:${{ DOCKER_CURRENT_TAG }} europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hopr-anvil:latest
          docker push europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hopr-anvil:latest

  deploy_prn:
    name: Deploy PRN nodes
    runs-on: ubuntu-2-core
    needs:
      - tag
    steps:
      - name: Checkout hoprnet repository
        uses: actions/checkout@v3

      - id: auth
        name: Set up Google Cloud Credentials
        uses: google-github-actions/auth@v1
        with:
          token_format: "access_token"
          credentials_json: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}

      - name: Login Google Container Registry
        uses: docker/login-action@v2
        with:
          registry: europe-west3-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Deploy on GCP VM
        if: ${{ !startsWith(github.ref, 'refs/heads/staging/') && !env.ACT }}
        run: |
          declare base_branch=${{ github.event.pull_request.base.ref }}
          if [ "${base_branch}" == "master" ]; then
            echo "DOCKER_TAG=latest"  >> $GITHUB_ENV
          else
            echo "DOCKER_TAG=${base_branch/release\//}" >> $GITHUB_ENV
          fi
          ./scripts/deploy.sh "europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hoprd:${{ env.DOCKER_TAG }}" 3 ${base_branch}
        env:
          DEPLOYER_PRIVATE_KEY: ${{ secrets.DEPLOYER_WALLET_PRIVATE_KEY }}
          HOPRD_PASSWORD: ${{ secrets.BS_PASSWORD }}
          HOPRD_API_TOKEN: ${{ secrets.HOPRD_API_TOKEN }}
          FAUCET_SECRET_API_KEY: ${{ secrets.FAUCET_SECRET_API_KEY }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN }}

      # - name: Notify Success
      #   if: ${{ success() && !env.ACT }}
      #   run: |
      #     ./scripts/notify-matrix-cluster-info.sh
      #   env:
      #     MATRIX_ROOM: ${{ env.MATRIX_CLUSTER_INFO_ROOM }}
      #     HOPRD_API_TOKEN: ${{ secrets.HOPRD_API_TOKEN }}

      # - name: Notify Failure
      #   if: ${{ failure() && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/staging/')) && !env.ACT }}
      #   run: |
      #     ./scripts/notify-matrix-github-workflow-failure.sh "${MATRIX_ROOM}" "${{ github.repository }}" \
      #       "${{ github.workflow }}" "${{ github.run_id }}"
